{"version":3,"sources":["api/api.js","components/Hand/Hand.js","components/ButtonGroup/Button.js","components/ButtonGroup/ButtonGroup.js","components/App.js","index.js"],"names":["fetchDeck","deckName","cardCount","fetch","concat","then","response","json","catch","error","Error","Hand","_ref","className","cards","remaining","react_default","a","createElement","Fragment","map","card","index","src","image","key","alt","Button","children","handleClick","rest","Object","objectWithoutProperties","assign","onClick","ButtonGroup","getMoreCards","getNewDeck","ButtonGroup_Button","type","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getCards","result","_hasData","setState","deck","hasData","deck_id","state","hand","_this2","_this$state$deck","components_Hand_Hand","deckId","components_ButtonGroup_ButtonGroup","React","Component","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.050fd52f.chunk.js","sourcesContent":["\r\nexport const fetchDeck = (deckName, cardCount) => {\r\n    try {\r\n        return fetch(`https://deckofcardsapi.com/api/deck/${deckName}/draw/?count=${cardCount}`)\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                throw new Error('error: ', error)\r\n            });\r\n    } catch(error) {\r\n        throw new Error('error: ', error);\r\n    }\r\n}","import React from 'react';\r\nimport './Hand.css';\r\n\r\nconst Hand = ({ className, cards, remaining }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className={className}>\r\n                {remaining === 0 ? <div>There are no more cards remaining.</div> : cards.map((card, index) => (\r\n                    <img src={card.image} key={index} alt={card.image} />\r\n                ))}\r\n            </div>\r\n            <div>\r\n                <p className=\"cardsRemaining\">Cards Remaining: {remaining}</p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Hand;\r\n","import React from 'react';\r\n\r\nconst Button = ({ children, handleClick, className, ...rest }) => {\r\n    return (\r\n        <button onClick={handleClick} className={className} {...rest}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst ButtonGroup = ({ className, getMoreCards, getNewDeck }) => {\r\n    return (\r\n        <div className={className}>\r\n            <Button handleClick={getMoreCards} className=\"deckButton\" type=\"button\">New Hand</Button>\r\n            <Button handleClick={getNewDeck} className=\"deckButton\" type=\"button\">New Deck</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { fetchDeck } from '../api/api';\nimport Hand from './Hand/Hand';\nimport ButtonGroup from './ButtonGroup/ButtonGroup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // used to prevent calling setState when the component unmounts\n    this._hasData = false;\n    this.state = {\n      deck: [],\n      hasData: false,\n    }\n  }\n\n  componentDidMount() {\n    fetchDeck('new', 5).then(hand => {\n      this.getCards(hand);\n    });\n  }\n\n  componentWillUnmount() {\n    this._hasData = false;\n  }\n\n  getCards = result => {\n    this._hasData = true;\n    if (this._hasData) {\n      this.setState({\n        deck: result,\n        hasData: true,\n      });\n    }\n  };\n\n  getMoreCards = () => {\n    const { deck_id } = this.state.deck;\n    fetchDeck(deck_id, 5).then(hand => {\n      this.getCards(hand);\n    });\n  }\n\n  getNewDeck = () => {\n    fetchDeck('new', 5).then(hand => {\n      this.getCards(hand);\n    });\n  }\n  render() {\n    const { cards, deck_id, remaining } = this.state.deck;\n    const { hasData } = this.state;\n    return (\n      <div className=\"appContainer\">\n        <h2 className=\"deckHeader\">Deck of Cards</h2>\n        {hasData && (\n          <Hand \n            className=\"handContainer\"\n            cards={cards}\n            deckId={deck_id}\n            remaining={remaining}\n            hasData={hasData} />)}\n        <ButtonGroup className=\"buttonGroup\" getMoreCards={this.getMoreCards} getNewDeck={this.getNewDeck} />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}